Scanner sc=new Scanner(System.in);
   int n=sc.nextInt();
        int[][] arr=new int[n][n];
        
        for (int i=0; i<n; i++){
            for (int j=0; j<n; j++){
            arr[i][j]=sc.nextInt();
                
            }
        }
                String ans=nQueen(arr,n);
                
                System.out.println(ans);
        
        }
    public static String nQueen(int[][] arr, int n){
         for (int row=0; row<n; row++){
            for (int col=0; col<n; col++){
           if (arr[row][col]==1){
                
              boolean check=checkRowCol(arr,n,row,col) && checkDia(arr,n,row,col) ;
               
               if (check==false){
               return "Danger";
           }
                
        }
        }
             
         }
        return "N Queens";
        
    }
    public static boolean checkDia(int[][] arr, int n, int row , int col){
   
    for (int i=row+1, j=col+1; i<n && j<n; i++,j++){
        if (arr[i][j]==1){
            return false;
            
        }
    }
    for (int i=row+1, j=col-1; i<n && j>=0; i++,j--){
        if (arr[i][j]==1){
            return false;
        }
    }
    return true;
    }
    
    public static boolean checkRowCol(int[][] arr, int n, int row , int col){
//           Row check
    
        
        for (int i=col+1; i<n; i++){
        if (arr[row][i]==1){
            
            return false;
        }
             
        }
       
        // coloum check
        
        for (int i=row+1; i<n; i++){
        if (arr[i][col]==1){
            return false;
        }
           
        }
        
    return true;
    }
}